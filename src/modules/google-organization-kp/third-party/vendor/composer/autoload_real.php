<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit5fa769a6fa6622ac2a27547b9093ffd9
=======
class ComposerAutoloaderInit51ae230f1e1f117e4a6522f759483847
>>>>>>> See #1717: Initial work on Google Organization KP API
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Wordlift_Modules_Google_Organization_Kp_Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    /**
     * @return \Wordlift_Modules_Google_Organization_Kp_Composer\Autoload\ClassLoader
     */
    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit5fa769a6fa6622ac2a27547b9093ffd9', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Wordlift_Modules_Google_Organization_Kp_Composer\Autoload\ClassLoader(\dirname(__DIR__));
        spl_autoload_unregister(array('ComposerAutoloaderInit5fa769a6fa6622ac2a27547b9093ffd9', 'loadClassLoader'));

        require __DIR__ . '/autoload_static.php';
        call_user_func(\Wordlift_Modules_Google_Organization_Kp_Composer\Autoload\ComposerStaticInit5fa769a6fa6622ac2a27547b9093ffd9::getInitializer($loader));
=======
        spl_autoload_register(array('ComposerAutoloaderInit51ae230f1e1f117e4a6522f759483847', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Wordlift_Modules_Google_Organization_Kp_Composer\Autoload\ClassLoader(\dirname(__DIR__));
        spl_autoload_unregister(array('ComposerAutoloaderInit51ae230f1e1f117e4a6522f759483847', 'loadClassLoader'));

        require __DIR__ . '/autoload_static.php';
        call_user_func(\Wordlift_Modules_Google_Organization_Kp_Composer\Autoload\ComposerStaticInit51ae230f1e1f117e4a6522f759483847::getInitializer($loader));
>>>>>>> See #1717: Initial work on Google Organization KP API

        $loader->setClassMapAuthoritative(true);
        $loader->register(true);

        return $loader;
    }
}
